:root {
	--step-0: clamp(0.875rem, 0.788rem + 0.4348vw, 1.25rem);
	--step-1: clamp(1.05rem, 0.9312rem + 0.5942vw, 1.5625rem);
	--step-2: clamp(1.26rem, 1.0993rem + 0.8036vw, 1.9531rem);
	--step-6: clamp(0.5rem, 0.3rem + 5vw, 5rem);

	--clr-primary: hsl(260, 5%, 11%);
	--clr-secondary: hsl(0, 0%, 41%);
	--clr-accent: hsl(231, 100%, 27%);
	--clr-accent-secondary: hsl(330, 100%, 71%);
	--clr-copy-invert: hsl(0, 40%, 98%);
	--space: 1rem;
	--space-huge: clamp(1rem, 0.9402rem + 8vw, 105rem);
}
/* 1. Use a more-intuitive box-sizing model */
*,
*::before,
*::after {
	box-sizing: border-box;
}

/* 2. Remove default margin */
* {
	margin: 0;
}

html {
	-moz-text-size-adjust: none;
	-webkit-text-size-adjust: none;
	text-size-adjust: none;
}

body {
	min-height: 100vh;
	/* 3. Add accessible line-height */
	line-height: 1.4;
	/* 4. Improve text rendering */
	-webkit-font-smoothing: antialiased;
}

/* 5. Improve media defaults */
img,
picture,
video,
canvas,
svg {
	display: block;
	max-width: 100%;
}

/* 6. Inherit fonts for form controls */
input,
button,
textarea,
select {
	font: inherit;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
	line-height: 1.1;
}

/* 7. Avoid text overflows */
p,
h1,
h2,
h3,
h4,
h5,
h6 {
	overflow-wrap: break-word;
}

/* 8. Improve line wrapping */
p {
	text-wrap: pretty;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	text-wrap: balance;
}

/*
    9. Create a root stacking context
  */
#root,
#__next {
	isolation: isolate;
}

/* FONTS */
@font-face {
	font-family: "CircularStd-Book";
	src: url("../fonts/CircularStd-Book.otf") format("opentype");
	font-family: "CircularStd-Bold";
	src: url("../fonts/CircularStd-Bold.otf") format("opentype");
	font-family: "CircularStd-Black";
	src: url("../fonts/CircularStd-Black.otf") format("opentype");
	font-family: "CircularStd-Medium";
	src: url("../fonts/CircularStd-Medium.otf") format("opentype");
	font-family: "CircularStd-Light";
	src: url("../fonts/CircularStd-Light.otf") format("opentype");
	font-family: "SimplonMono-Regular";
	src: url("../fonts/SimplonMono-Regular.otf") format("opentype");
}
a {
	text-decoration: none;
	color: currentColor;
}

body {
	font-family: "CircularStd-Book", Arial, sans-serif;
	color: car(--clr-primary);
	font-size: var(--step-0);
}

.simplon {
	font-family: "SimplonMono-Regular", Arial, sans-serif;
	font-weight: 300;
}

.light {
	font-family: "CircularStd-Light", Arial, sans-serif;
	font-weight: 100;
}

ul {
	margin-block-start: 0;
	margin-block-end: 0;
	padding-block: 1.4rem;
	/* padding-block-end: 2rem;
	display: flex;
	justify-content: space-between;
	align-items: center; */
	list-style: none;
	padding-inline-start: 0;
}

li {
	text-decoration: none;
	font-weight: bold;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
	scroll-margin-block: 5ex;
}

hr,
.top-line {
	border: 0;
	border-top: 0.5px solid var(--secondary);
	width: 100%;
	height: 0px;
}

/* UTILITY */

.fs-l {
	font-size: var(--step-2);
	line-height: 1.15;
	letter-spacing: -0.5px;
}

.fs-xl {
	font-size: var(--step-6);
}

.space-xxl {
	margin-block-start: calc(var(--space-huge) * 2);
}

.wrapper {
	max-width: 1700px;
	padding-inline: 1rem;
	margin-inline: auto;
}

.full-bleed {
	width: 100vw;
	margin-left: calc(50% - 50vw);
}

.flow > * + * {
	margin-block-start: var(--flow-space, 1em);
}

.uppercase {
	text-transform: uppercase;
}

.mixed {
	color: var(--clr-primary);
	mix-blend-mode: difference;
}

.fixed {
	position: fixed;
	z-index: 2;
}

.border-top {
	border-top: 0.5px solid var(--clr-secondary);
	margin-top: var(--space);
}

/* COMPOSITIONAL */

.header-grid {
	display: grid;
	grid-template-columns: 25% 1fr;
	gap: 1rem;
	/* padding-inline: 1rem; */
}

.hero-intro {
	display: flex;
	flex-direction: column;
	align-content: space-between;
	grid-column: 2 / -1;
}

.logos-list-container {
	display: grid;
	grid-template-columns: repeat(
		auto-fill,
		minmax(var(--auto-grid-min-size, 12rem), 1fr)
	);

	place-items: center;
	gap: var(--space);
}

/* PRESENTATIONAL */

.logos {
	max-width: 10rem;
	object-fit: cover;
	filter: grayscale(1);
	transition: filter 200ms ease, transform 250ms linear;
}

.logos:hover {
	filter: grayscale(0.2);
}

/* colors */

.light-clr {
	color: var(--clr-secondary);
}

.elevate {
	display: inline-block;
	transition: transform 250ms;

	cursor: pointer;
}

.elevate:hover {
	transform: translateY(-10px);
}

.hero-img {
	z-index: -1;
}
